name: CI

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
    paths:
      - 'src/**'
      - '.github/workflows/ci-container.yaml'

env:
  REGISTRY_NAME: ""

permissions:
  contents: read
  packages: read

jobs:
  docker-silo:
    runs-on: ubuntu-latest
    environment: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
      - name: Setup Docker QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Azure with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Setup ACR Login Token
        id: get-acr-credentials
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            echo "ACR_ACCESS_TOKEN=$(az acr login --name ${{ env.REGISTRY_NAME }} --expose-token --output tsv --query accessToken)" >> "$GITHUB_OUTPUT"
            echo "ACR_LOGIN_SERVER=$(az acr login --name ${{ env.REGISTRY_NAME }} --expose-token --output tsv --query loginServer)" >> "$GITHUB_OUTPUT"
      - name: Login to ACR with OIDC
        uses: azure/docker-login@v1
        with:
          login-server: ${{ steps.get-acr-credentials.outputs.ACR_LOGIN_SERVER }}
          username: 00000000-0000-0000-0000-000000000000
          password: ${{ steps.get-acr-credentials.outputs.ACR_ACCESS_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.get-acr-credentials.outputs.ACR_LOGIN_SERVER }}/globotickets/globotickets.silo
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/GloboTickets.Silo/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #cache-from: type=gha
          #cache-to: type=gha,mode=max
          secrets: |
            github_token=${{ secrets.GITHUB_TOKEN }}